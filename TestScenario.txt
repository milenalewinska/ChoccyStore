Test Scenario

A test scenario, sometimes called a scenario test, is the documentation of a use case. In other words, it describes an action the user may undertake with a website or app. It may also represent a situation the user may find themselves in while using that software or product. 

Test Scenarios are created to ensure that every functionality a website or app offers is working as expected. It is best to gather input from clients, stakeholders, and developers to create accurate test scenarios. This helps effectively cover all possible user scenarios and enables comprehensive testing of all business flows of the software in question. 


Testing extent inclued:  

1. Functional Testing 

a. Installation testing â€“check if the application properly gets installed in your device, verify with multiple cases like for storage capacity of mobile, network speed, security, and supporting software ( if anything exists). 

b. Check if the user can launch the application and check for the sign-up option. 

c. Verify if the user can log in to the application and explore the screens. 

d. Verify the application has the proper view as per the screen resolutions 

e. Check the functionalities on the screen like the back button, submit, and save button. 

f. Verify for the screen navigations and zoom options. 

g. Check the behavior with an interruption and how the application behaves like a call, SMS alerts, and other application notifications. 


2. Usability Testing 

a. Check by changing the internet options, Wi-Fi, on switching to mobile data. 

b. Check the application performance in different networks like 1G, 2G, 3G, 4G 

c. Check the application behavior in operating systems like android, iOS, and Microsoft  

d. Verify for compatibility on different devices. 

e. Check for readability of the text and if any broken links exist. 

f. Check for the application in low battery mode. 


3. Compatibility Testing

a. Check the URL in different browsers. 

b. Check the application behavior in operating systems like android, iOS, and Microsoft  

c. Verify for compatibility on different devices. 


4. Visual Testing 

a. Verify the application has the proper view as per the screen resolutions 

b. Verify if the application supports any screen captures. 

c. Check for alignments and GUI issues. 